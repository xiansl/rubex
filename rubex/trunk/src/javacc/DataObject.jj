options{  JDK_VERSION = "1.6";  static = false;}PARSER_BEGIN(DataObjectParser)package com.googlecode.rubex.data.parser;
import com.googlecode.rubex.data.*;import com.googlecode.rubex.utils.StringUtils;
public class DataObjectParser{}PARSER_END(DataObjectParser)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN :{    < NULL : "null" > |    < TRUE : "true" > |    < FALSE : "false" > |    < INTEGER : (["+","-"])? (["0"-"9"])+ > |     < REAL : (["+","-"])? ("NaN" | "Infinity" | ((["0"-"9"])+ "." (["1"-"9"])+ (["e","E"] (["+","-"])? (["1"-"9"])+)?)) > |    < STRING : ( "\"" ((~["\"", "\\"]) | ("\\" (~[])))* "\"" | "\'" ((~["\'", "\\"]) | ("\\" (~[])))* "\'" ) >}DataObject dataObject ():{    DataObject result;}{    (        result = nullDataObject() |	    result = booleanDataObject() |	    result = integerDataObject() |	    result = realDataObject() |	    result = stringDataObject()//	    result = binaryDataObject() |//	    result = listDataObject() |//	    result = structureDataObject()    )    {        return result;    }}NullDataObject nullDataObject ():{}{    < NULL > {return DataObjectUtils.createNullDataObject ();}}BooleanDataObject booleanDataObject ():{}{    < TRUE > {return DataObjectUtils.createBooleanDataObject (true);} |    < FALSE > {return DataObjectUtils.createBooleanDataObject (false);}}IntegerDataObject integerDataObject ():{    Token value;}{    value = < INTEGER > {return DataObjectUtils.createIntegerDataObject (Long.parseLong (value.toString ()));}}RealDataObject realDataObject ():{    Token value;}{    value = < REAL > {return DataObjectUtils.createRealDataObject (Double.parseDouble (value.toString ()));}}StringDataObject stringDataObject ():{    Token value;}{    value = < STRING >    {        String image = value.toString ();        return DataObjectUtils.createStringDataObject (StringUtils.unescape (image.substring (1, image.length () - 2)));    }}